# THIS IS TODO
# It's like docker-compose-ha.yml but with Traefik also in HA (adding Consul)
version: '3.3'

services:

    traefik_init:
        image: traefik:v1.5
        command:
          - "storeconfig"
          - "--api"
          - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
          - "--entrypoints=Name:https Address::443 TLS"
          - "--defaultentrypoints=http,https"
          - "--acme"
          - "--acme.storage=etc/traefik/acme/acme.json"
          - "--acme.entryPoint=https"
          - "--acme.httpChallenge.entryPoint=http"
          - "--acme.onHostRule=true"
          - "--acme.onDemand=false"
          - "--acme.email=${GR_DOMAIN_EMAIL:-youremail@domain.com}"
          - "--docker"
          - "--docker.swarmMode"
          - "--docker.domain=${GR_DOMAIN_URL:-mydomain.com}"
          - "--docker.watch"
          - "--consul"
          - "--consul.endpoint=consul.cluster:8500"
          - "--consul.prefix=traefik"
        networks:
          - frontend
          - backend
        deploy:
          restart_policy:
            condition: on-failure
        depends_on:
          - consul

    traefik:
        image: traefik:v1.5
        depends_on:
          - traefik_init
          - consul
        command:
          - "--consul"
          - "--consul.endpoint=consul.cluster:8500"
          - "--consul.prefix=traefik"
        ports:
          - target: 80
            published: 80
            mode: host
          - target: 443
            published: 443
            mode: host
          - target: 8080
            published: 8080
            mode: host
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        networks:
          - frontend
          - backend
        deploy:
          mode: replicated
          placement:
            constraints:
              - node.role==manager
          update_config:
            parallelism: 1
            delay: 10s
          restart_policy:
            condition: on-failure

    consul:
        image: consul:1.0.2
        command: agent -server -client 0.0.0.0 -bootstrap-expect=1 -data-dir /consul/data -retry-join consul.cluster
        volumes:
          - consul-data:/consul/data
        environment:
          - CONSUL_LOCAL_CONFIG={"datacenter":"us_east2","server":true}
          - CONSUL_BIND_INTERFACE=eth0
          - CONSUL_CLIENT_INTERFACE=eth0
        deploy:
          replicas: 1
          endpoint_mode: dnsrr
          placement:
            constraints:
              - node.role==manager
          restart_policy:
            condition: on-failure
        networks:
           backend:
              aliases:
                - consul.cluster
        ports:
           - target: 8500
             published: 8500
             mode: host

    gr-backend:
        image: smartsdk/greenroute-backend:latest
        depends_on:
            - keyrock
        environment:
            - SPRING_PROFILES_ACTIVE=production
            - SPRING_DATA_MONGODB_URI=mongodb://${GR_MONGO_HOST:-mongo}:27017/?replicaSet=${REPLICASET_NAME:-rs}
            - IDM_SERVERS_KEYSTONE=${GR_KEYROCK_URL:-http://keyrock:5000}
            - IDM_SERVERS_ORION=${GR_ORION_URL:-https://orion.mydomain.com}
            - FRONT_URL=https://www.${GR_DOMAIN_URL:-mydomain.com}/#
            - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME:-mail@domain.com}
            - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD:-password}
        networks:
          - backend
          - frontend
        labels:
          - "traefik.backend=gr-backend"
          - "traefik.frontend.rule=Host:api.${GR_DOMAIN_URL:-mydomain.com}"
          - "traefik.enable=true"
          - "traefik.port=8080"

    gr-frontend:
        image: smartsdk/greenroute-frontend:latest
        environment:
          - GR_BACKEND_URL=${GR_BACKEND_URL:-https://api.mydomain.com/back-sdk}
          - GR_GRAFANA_URL=${GR_GRAFANA_URL:-https://grafana.mydomain.com/dashboard/db/airquality-dashboard}
          - GR_ALERTS_URL=${GR_ALERTS_URL:-https://alerts.mydomain.com}
          - GR_ROUTINGMAP_URL=${GR_ROUTINGMAP_URL:-https://map.mydomain.com/}
          - GR_DOMAIN_URL=${GR_DOMAIN_URL:-mydomain.com}
        networks:
          - frontend
          - backend
        labels:
          - "traefik.frontend.rule=Host:${GR_DOMAIN_URL:-mydomain.com}, www.${GR_DOMAIN_URL:-mydomain.com}"
          - "traefik.enable=true"
          - "traefik.port=8"

    mongo-seeder:
        image: smartsdk/greenroute-mongo-seed:latest
        deploy:
          restart_policy:
            condition: on-failure
        depends_on:
          - mongo
        environment:
          - GR_MONGO_HOST=${GR_MONGO_HOST:-mongo}
        networks:
          - backend
        labels:
          - "traefik.enable=false"

    keyrock:
        image: smartsdk/keyrock
        networks:
          - backend
        labels:
          - "traefik.enable=false"

    routing-map:
        image: smartsdk/greenroute-routing-frontend:latest
        environment:
          - GR_BACKEND_URL=${GR_BACKEND_URL:-https://api.mydomain.com/back-sdk}/
          - GR_ORION_URL=${GR_ORION_URL:-https://orion.mydomain.com}
        networks:
          - frontend
        labels:
          - "traefik.frontend.rule=Host:map.${GR_DOMAIN_URL:-mydomain.com}"
          - "traefik.enable=true"
          - "traefik.port=80"

    alerts:
        image: smartsdk/alerts-app:latest
        environment:
          - GR_BACKEND_URL=${GR_BACKEND_URL:-https://api.mydomain.com/back-sdk/}
          - GR_ORION_URL=${GR_ORION_URL:-https://orion.mydomain.com}
        networks:
          - frontend
        labels:
          - "traefik.frontend.rule=Host:alerts.${GR_DOMAIN_URL:-mydomain.com}"
          - "traefik.enable=true"
          - "traefik.port=80"

networks:
  backend:
    driver: overlay
    external: true
  frontend:
    driver: overlay
    external: true

volumes:
  consul-data:
