version: '3.3'
services:
    traefik:
        image: traefik:1.7-alpine
        command: --api --docker --docker.swarmMode --docker.domain=traefik --docker.watch
        ports:
          - target: 80
            published: 80
            mode: host
          - target: 443
            published: 443
            mode: host
          - target: 8080
            published: 8080
            mode: host
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/traefik/traefik.toml:/traefik.toml
          - /opt/traefik/acme.json:/acme.json
        networks:
          - frontend
          - backend
        deploy:
          mode: replicated
          replicas: 1
          placement:
            constraints:
              - node.role==manager
          update_config:
            parallelism: 1
            delay: 10s
          restart_policy:
            condition: on-failure

    gr-backend:
        image: smartsdk/greenroute-backend:latest
        depends_on:
            - keyrock
        environment:
            - SPRING_PROFILES_ACTIVE=production
            - SPRING_DATA_MONGODB_URI=mongodb://${GR_MONGO_HOST:-mongo}:27017
            - IDM_SERVERS_KEYSTONE=${GR_KEYROCK_URL:-http://keyrock:5000}
            - IDM_SERVERS_ORION=${GR_ORION_URL:-https://orion.greenroute.smartsdk.eu}
            - FRONT_URL=https://www.${GR_DOMAIN_URL:-greenroute.smartsdk.eu}/#
            - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME:-mail@domain.com}
            - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD:-password}
        networks:
          - backend
        labels:
          - "traefik.backend=gr-backend"
          - "traefik.frontend.rule=Host:api.${GR_DOMAIN_URL:-greenroute.smartsdk.eu}"
          - "traefik.enable=true"
          - "traefik.port=8080"

    gr-frontend:
        image: smartsdk/greenroute-frontend:latest
        environment:
          - GR_BACKEND_URL=${GR_BACKEND_URL:-https://api.greenroute.smartsdk.eu/back-sdk}
          - GR_GRAFANA_URL=${GR_GRAFANA_URL:-https://grafana.greenroute.smartsdk.eu/dashboard/db/airquality-dashboard}
          - GR_ALERTS_URL=${GR_ALERTS_URL:-https://alerts.greenroute.smartsdk.eu}
          - GR_ROUTINGMAP_URL=${GR_ROUTINGMAP_URL:-https://map.greenroute.smartsdk.eu/}
          - GR_DOMAIN_URL=${GR_DOMAIN_URL:-greenroute.smartsdk.eu}
        networks:
          - frontend
          - backend
        labels:
          - "traefik.frontend.rule=Host:${GR_DOMAIN_URL:-greenroute.smartsdk.eu}, www.${GR_DOMAIN_URL:-greenroute.smartsdk.eu}"
          - "traefik.enable=true"
          - "traefik.port=80"

    routing-map:
        image: smartsdk/greenroute-routing-frontend:latest
        environment:
          - GR_BACKEND_URL=${GR_BACKEND_URL:-https://api.greenroute.smartsdk.eu/back-sdk}/
          - GR_ORION_URL=${GR_ORION_URL:-https://orion.greenroute.smartsdk.eu}
        networks:
          - frontend
        labels:
          - "traefik.frontend.rule=Host:map.${GR_DOMAIN_URL:-greenroute.smartsdk.eu}"
          - "traefik.enable=true"
          - "traefik.port=80"

    mongo-seeder:
        image: smartsdk/greenroute-mongo-seed:latest
        deploy:
          restart_policy:
            condition: on-failure
        depends_on:
          - mongo
        environment:
          - GR_MONGO_HOST=${GR_MONGO_HOST:-mongo}
        networks:
          - backend
        labels:
          - "traefik.enable=false"

    keyrock:
        image: smartsdk/keyrock
        networks:
          - backend
        labels:
          - "traefik.enable=false"

networks:
  backend:
    driver: overlay
    external: true
  frontend:
    driver: overlay
    external: true
